
////////////////////////////////////////////////
//Ejercicio 2


//a/*
function primerCartaDeLaMano_(cartasEnLaMano){
    return(primero(cartasEnLaMano)
}

//b 
function segundaCartaDeLaMano_(cartasEnLaMano){
    return(primero(resto(cartasEnLaMano))
}

//c 
function terceraCartaDeLaMano_(cartasEnLaMano){
    return(primero(resto(resto(cartasEnLaMano)))
}

//d 
function laMano_LuegoDeRobarUnaCartaDe_(cartasEnLaMano, cartasEnElMazo){
    mazoActualizado := []
    while(longitudDe_(cartasEnLaMano) <= 3){
        mazoActualizado := mazoActualizdo ++ resto(cartasEnElMazo)
        cartasEnLaMano := cartasEnLaMano ++ [primero(cartasEnLaMano)]
    }
    return (cartasEnLaMano)
}

//e

function laMano_LuegoDeJugarUnaCarta(cartasEnLaMano){
    return (cartasEnLaMano - primero(cartasEnLaMano)
}

//f 
function laMano_LuegoDeJugarLaSegundaCarta(cartasEnLaMano){
    return (cartasEnLaMano - primero(resto(cartasEnLaMano)))
}
*/

function valorParaEnvidoDe_(){
    //20 + valor de las cartas. Excepto 10, 11 y 12, que es 0 (otherwise)
}

function mayorValorEntre_Y_(){
    //Mayor valor que aporta para el envido
}