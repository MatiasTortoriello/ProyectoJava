//Ejercicio 1:

function nivelDeDificultad() {
    /*
        PROPÓSITO: Describe el nivel de dificultad del juego a través de la cantidad de obstáculos que hay en el juego.
        PARÁMETROS:
        TIPO: Número
        PRECONDICIONES:
            * 
    */
    irAPrimeraCeldaEnUnRecorridoAl_Y_(Este, Norte)
    cantidadDeObstaculosAca := unoSi_CeroSiNo()
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)){
        
        irASiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)
        cantidadDeObstaculosAca := cantidadDeObstaculosAca + unoSi_CeroSiNo()
        
    }

    return (cantidadDeObstaculosAca)
}

//Ejercicio 2:

/*function cantidadDeFichasCirculoEnEstaFila(){
    
        PROPÓSITO: Describe la cantidad de fichas círculo que hay en el tablero
        PARÁMETROS:
        TIPO: Número
        PRECONDICIONES:
            * 
    
    irAPrimeraCeldaEnUnRecorridoAl_Y_(Este, Norte)
    cantidadDeFichasRojasAca := unoSi_CeroSiNo()
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)){
        
        irASiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)
        cantidadDeFichasRojasAca := cantidadDeFichasRojasAca + unoSi_CeroSiNo()
        
    }

    return (cantidadDeFichasRojasAca)    
}*/

function cantidadDeFichasCirculoEnEstaFila(){
    /*
        PROPÓSITO: Describe la cantidad de fichas círculo que hay en el tablero
        PARÁMETROS:
        TIPO: Número
        PRECONDICIONES:
            * 
    */
    irAlBorde(Oeste)
    cantidadDeFichasRojasAca := unoSi_CeroSiNo()
    contarFichasSiSePuedeMover()
    while(puedeMover(Este)){
        
        Mover(Este)
        cantidadDeFichasRojasAca := cantidadDeFichasRojasAca + unoSi_CeroSiNo()
        
    }

    return (cantidadDeFichasRojasAca)    
}



//Ejercicio 3

function hayFichasExplotadas(){
        /*
        PROPÓSITO: Indica si en el tablero existen fichas explotadas indicadas a través de una ubicación vacía
        PARÁMETROS:
        TIPO: Boolean
        PRECONDICIONES:
            * 
    */
    irAPrimeraCeldaEnUnRecorridoAl_Y_(Este, Norte)
    hayFichasExplotadas := unoSi_CeroSiNo()
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte) && not hayFichasExplotadas){
        
        irASiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)
        hayFichasExplotadas := unoSi_CeroSiNo()
        
    }

    return (hayFichasExplotadas)        
}