/*Resolución parcial: Repartidor -> Código | Cliente -> Paquete 

Ejercicio 1: Desarrollar la función "cantidadClientesARecibirPaquete" 
que describa la cantidad de clientes 
que tienen su pedido en el mapa 
y todavía no fue entregado
*/
function cantidadClientesARecibirPaquete(){
    /*
        Propósito: Describe la cantidad de clientes que deben recibir su paquete, estos deben estar en el mapa.
        Precondiciones: Ninguna
        Tipo: Número
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este, Norte)
    cantidadPaquetes := unoSi_ceroSiNo(hayClienteAcaConPaqueteSinEntregarEnElMapa())
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)){
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)
        cantidadPaquetes := cantidadPaquetes + unoSi_CeroSiNo(hayClienteAcaConPaqueteSinEntregarEnElMapa())
    }
    return(cantidadPaquetes)
    
}

function hayClienteAcaConPaqueteSinEntregarEnElMapa(){
        
}

/*
Ejercicio 2: Desarrollar "mayorIdClienteSinPaquete" que describe
el mayor ID de un cliente que no recibió el paquete,
el cual se encuentra en el mapa
*/

function mayorIdClienteSinPaquete(){
    
}

/*
Ejercicio 3: Desarrollar el procedimiento EntregarPaqueteMayor,
que asumiendo que el cabezal se encuentra sobre el repartidor
que debe llevar ese paquete, lleva el paquete al cliente.
Ayuda: En la ubicación del cliente debe quedar junto a éste; el paquete y el repartidor.
Ojo que el repartidor puede tener que llevar varios paquetes y sólo nos importa el mayor.
*/

procedure EntregarPaqueteMayor(){
    
}