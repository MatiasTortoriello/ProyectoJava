program{
    TomarDineroDePerdedores()
    return(cantidadDeDineroDePerdedores())
}

//Ejrecicio 1 A (LINDANTES)
function hayActitudSospechosa(){
    /*
        Prop:
            Indica si hay algún jugador en actitud sospechosa
            con el croupier.
        Prec.
            El cabezal se encuentra sobre el croupier
        Tipo:
            Bool
    */
    direcciónRecorrido := minDir()
    while(direcciónRecorrido /= maxDir() && not hayActitudSospechosaAl_(direcciónRecorrido)){
        direcciónRecorrido := siguiente(direcciónRecorrido)
    }
    return(hayActitudSospechosaAl_(direcciónRecorrido))
}

function hayActitudSospechosaAl_(dirección){
    /*
        Prop:
            Indica si hay un jugador con actitud sospecha 
            en la celda lindante *dirección*
        Prec:
            Debe haber dicha celda
            Debe haber un jugador al *dirección*
        Parám:
            *dirección*: Dirección - La dirección en la que 
            se encuentra el jugador
    */
    nroCroupier := númeroAcá()
    nroJugador := 0
    if(puedeMover(dirección)){
        Mover(dirección)
        nroJugador:= númeroAcá()
    }
    return(nroCroupier == nroJugador)    
}

//Ejrecicio 1 B (TODO EL TABLERO)
function hayActitudSospechosaa(){
    /*
        Prop:
            Indica si hay algún jugador en actitud sospechosa
            con el croupier.
        Prec.
            El cabezal se encuentra sobre el croupier
        Tipo:
            Bool
    */
    nroCroupier := númeroAcá()
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este, Norte)
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte) && númeroJugador() /= nroCroupier){
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }
    return(númeroJugador() == nroCroupier)
}

function númeroJugador(){
    /* 
    */
    return(
        choose
            númeroAcá() when (hayJugadorAcá())
            0 otherwise
        )
}

//Ejercicio 2
function cantidadDeDineroDePerdedores(){
    /*
        Prop:
            Describe la cantidad de dinero que 
            se le ortorgará al croupier
        Prec:
            Ninguna
        Tipo:
            Número
    */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este, Norte)
    dineroTotal := cantidadDeDineroDelJugadorPerdedor()
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)){
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
        dineroTotal := dineroTotal + cantidadDeDineroDelJugadorPerdedor()
    }
    return(dineroTotal)
}

function cantidadDeDineroDelJugadorPerdedor(){
    /*
        Prop:
            Describe la cantidad de dinero 
            que perdió el jugador de la ubicación actual.
        Prec:
            Ninguna
        Tipo:
            Número.
    */
    return(
        choose 
            dineroAcá() when (hayJugadorAcá() && esPerdedor())
            0 otherwise
        )
}

function esPerdedor(){
    /*
        Prop:
            Indica si el jugador de la ubicación actual
            es perdedor
        Prec:
            Ninguna
        Tipo:
            booleano
    */ 
    return(númeroAcá() /= númeroCroupier())
}

function númeroCroupier(){
    /*
        Prop:
            Describe el número sorteado por
            el croupier
        Prec:
            Ninguna
        Tipo:
            Número.
    */
    IrACruppier()
    return(númeroAcá())
}


//Ejercicio 3

procedure Otorgar_DineroAlCruppier(cantidadAOtorgar){
    /* */
    IrACruppier()
    Poner_DeColor_(cantidadAOtorgar, colorDinero())
}

//Ejercicio 4

procedure TomarDineroDePerdedores(){
    /* */
    totalDineroAEntregar := cantidadDeDineroDePerdedores()
    RecolectarDineroDeLosPerdedores()
    Otorgar_DineroAlCruppier(totalDineroAEntregar)
}

procedure RecolectarDineroDeLosPerdedores(){
    /* */
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este,Norte)
    RecolectarDineroSiHayPerdedorAquí()
    while(haySiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)){
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este, Norte)
        RecolectarDineroSiHayPerdedorAquí()
    }
}

procedure RecolectarDineroSiHayPerdedorAquí(){
    /* */
    if(hayJugadorAcá() && esPerdedor()){
        SacarTodasLasDeColor_(colorDinero())
    }
}


























function colorJugador() {
    return(Azul)
}

function colorCruppier() {
    return(Negro)
}

function colorNúmero() {
    return(Rojo)
}

function colorDinero() {
    return(Verde)
}

function hayCruppierAcá() {
    return(hayBolitas(colorCruppier()))
}

function hayJugadorAcá() {
    return(hayBolitas(colorJugador()))
}

function dineroAcá() {
    return(nroBolitas(colorDinero()))
}

function idDeJugadorAcá() {
    return(nroBolitas(colorJugador()))
}

function númeroAcá() {
    return(nroBolitas(colorNúmero()))
}

procedure IrACruppier() {
    IrAPrimeraCeldaEnUnRecorridoAl_Y_(Este,Norte)
    while(not hayCruppierAcá()) {
        IrASiguienteCeldaEnUnRecorridoAl_Y_(Este,Norte)
    }    
}